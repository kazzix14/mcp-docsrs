name: Integration Tests

on:
  workflow_call:

env:
  BUN_VERSION: '1.2.14'

jobs:
  integration:
    name: Integration Tests - ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # Test native binaries on their respective platforms
          - os: ubuntu-latest
            target: linux-x64
            artifact: mcp-docsrs-linux-x64
          - os: ubuntu-latest
            target: linux-x64-musl
            artifact: mcp-docsrs-linux-x64-musl
            needs-docker: true
          - os: ubuntu-24.04-arm
            target: linux-arm64
            artifact: mcp-docsrs-linux-arm64
          - os: ubuntu-24.04-arm
            target: linux-arm64-musl
            artifact: mcp-docsrs-linux-arm64-musl
            needs-docker: true
          - os: macos-13  # Intel Mac for x64 binary
            target: darwin-x64
            artifact: mcp-docsrs-darwin-x64
          - os: macos-latest  # Apple Silicon for ARM64 binary
            target: darwin-arm64
            artifact: mcp-docsrs-darwin-arm64
          - os: windows-latest
            target: windows-x64
            artifact: mcp-docsrs-windows-x64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: ${{ env.BUN_VERSION }}
          no-cache: ${{ runner.os == 'Windows' }}  # Disable cache on Windows due to issues

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.artifact }}
          path: dist/

      - name: Make executable
        if: matrix.os != 'windows-latest'
        run: chmod +x dist/${{ matrix.artifact }}

      - name: Build MUSL test Docker image
        if: matrix.needs-docker == true
        run: docker build -t mcp-docsrs-musl-test -f test/integration/Dockerfile.musl-test .

      - name: Run integration tests (MUSL)
        if: matrix.needs-docker == true
        run: |
          docker run --rm -v $PWD:/workspace mcp-docsrs-musl-test -c "
            chmod +x /workspace/test/integration/test-musl.sh &&
            /workspace/test/integration/test-musl.sh /workspace/dist/${{ matrix.artifact }} ${{ matrix.target }}
          "

      - name: Run integration tests (Native)
        if: matrix.needs-docker != true
        shell: bash
        run: |
          # Set executable name based on platform
          if [ "${{ matrix.os }}" == "windows-latest" ]; then
            EXECUTABLE="./dist/${{ matrix.artifact }}.exe"
          else
            EXECUTABLE="./dist/${{ matrix.artifact }}"
          fi

          # Run integration test suite
          FLAGS=""
          if [[ "${{ matrix.target }}" == *"-musl" ]]; then
            FLAGS="--musl"
          fi
          if [ "${{ matrix.os }}" == "windows-latest" ]; then
            FLAGS="$FLAGS --windows"
          fi
          
          bun test/integration/test-binary.ts "$EXECUTABLE" "${{ matrix.target }}" $FLAGS
